#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char *encryptionSub(char[]);
char *decryptionSub(char[]);

char alpha[26] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
char rndm[26] = {'k', 'u', 'd', 'p', 't', 'e', 'v', 'j', 's', 'b', 'l', 'w', 'a', 'i', 'z', 'g', 'x', 'c', 'm', 'n', 'f', 'y', 'h', 'r', 'o', 'q'};
char encryptionSubKey[26];
size_t strlen(const char *str);

int main()
{
    int input, i;
    char *c_text, *cipherText, msg[255], message[255], encryptionSubKey[26];
    
    printf("1. encryption of rotation cipher\n");
    printf("2. decryption of rotation cipher\n");
    printf("3. encryption of substitution cipher\n");
    printf("4. decyrption of substitution cipher\n");
    printf("5. Quit\n");
         
    printf("\nChoose an option and press enter:   ");
    scanf("%d",&input);
    
    switch (input)
    {
        case 1:
            break;
        case 2:
            break;
        case 3:
            printf("Enter a message: ");
            fgetc(stdin);
            fgets(msg, 1000, stdin);
            c_text = encryptionSub(msg);
            break;
        case 4:
            printf("Enter a message: ");
            fgetc(stdin);
            fgets(msg, 1000, stdin);
            cipherText = decryptionSub(message);
            break;
        case 5:
            break;
        default:
            printf("Enter valid choice!");
            break;
    }
}
char *encryptionSub(char outputText[])
{
    int i, val, j;
    char msg[255];
    
    printf("Enter a unique key of 26 characters for encryption: "); // KUDPTEVJSBLWAIZGXCMNFYHROQ
    scanf("%s", encryptionSubKey);
    
    for(i = 0; i < strlen(outputText); i++)
    {
        for(j = 0; j < 26; j++)
        {
            if(alpha[j] == outputText[i])
            {
                outputText[i] = encryptionSubKey[j];
                break;
            }
        }
    }
    printf("\nEncrypted message: %s", outputText);
    return 0;
}
char *decryptionSub(char outputText[])
{
    int i, val, j;
    encryptionSubKey[26] = alpha[26];
    
    for(i = 0; i < strlen(outputText); i++)
    {
        for(j = 0; j < 26; j++)
        {
            if(rndm[26] == outputText[i])
            {
                outputText[i] = alpha[26];
                break;
            }
        }
    }
    printf("\nDecrypted message: %s", outputText);
    return 0;
}